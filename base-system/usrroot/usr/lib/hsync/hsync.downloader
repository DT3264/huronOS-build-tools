#!/bin/bash

set -x

## Load log function
. /usr/lib/hsync/hsync.logger

log "----Starting huronOS Directives Sync"
log "Checking if directives file already exits"
if [ ! -f /etc/hsync/directives ]; then
	cp /etc/hsync/default /etc/hsync/directives
	log "No directives file, using default directives"
fi

log "Starting dowload of huronOS directives file"

## Get the CONFIG_FILE url
declare "$(head -n 1 /etc/hsync/server)"

## Try the download of the config file
TMP_FILE="/tmp/directives-$$.hdf"
wget --timeout=10 -O $TMP_FILE $CONFIG_FILE
if [ $? -ne 0 ]; then
	log "Download of huronOS directives FAILED"
	exit 0
fi

log "huronOS directives downloaded"

## Check if directives file follows the syntaxis
log "Checking if directives file follows the syntaxis"
/usr/lib/hsync/hsync.validator $TMP_FILE >> /var/log/hsync.log
if [ $? -ne 0 ]; then
	log "Invalid syntax of directives file"
	exit 1
fi

## Check if huronOS rebooted in the last 120 seconds
log "Checking if huronOS rebooted in the last 120 seconds"
last_reboot_time=$(uptime -s | sed 's/ /T/g')
if [ "$(date --date="-120 sec" +%s)" -gt "$(date --date="$last_reboot_time" +%s)" ]; then
    ## Check if directives has changed
    log "Checking if directives file has changed"
    if [ "$(cat /etc/hsync/directives)" == "$(cat $TMP_FILE)" ]; then
        log "Directives file stills the same, skipping config"
        rm -f $TMP_FILE
        exit 0
    fi
fi

## Check if directive file has already expired
log "Checking if directive file has already expired"
GLOBAL=$(sed -nE '/^\[Global\]$/{:l n;/^(\[.*\])?$/q;p;bl}' $TMP_FILE)
for CONFIG in $GLOBAL; do
	declare $CONFIG
done

if [ "$ConfigExpirationTime" != "never" ]; then
	if [ "$(date -u +'%s')" -ge "$(date --date="TZ=\"$TimeZone\" $ConfigExpirationTime" +'%s')" ]; then
		log "Directives file has already expired"
		rm -f $TMP_FILE
		exit 0
	fi
fi

log "Directives file changed, updating huronOS config"
cp $TMP_FILE /etc/hsync/directives
rm -f $TMP_FILE
/usr/sbin/hsync.apply /etc/hsync/directives

exit 0
