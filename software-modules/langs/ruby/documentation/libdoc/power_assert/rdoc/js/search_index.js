var search_data = {"index":{"searchIndex":["powerassert","blockcontext","configuration","context","empty","formatter","inspectedvalue","parser","branch","dummyparser","safeinspectable","tracecontext","!()","==()","_colorize_message=()","_fixed?()","_trace_alias_method=()","_use_pp=()","app_caller_locations()","app_context?()","call_paths()","call_paths()","configuration()","configure()","disable()","enable()","enabled?()","fixed?()","idents()","idents()","inspect()","inspect()","inspect()","lazy_inspection=()","message()","message_proc()","method_id_set()","new()","new()","new()","new()","new()","new()","new()","new()","start()","trace()","yield()","readme"],"longSearchIndex":["powerassert","powerassert::blockcontext","powerassert::configuration","powerassert::context","powerassert::empty","powerassert::formatter","powerassert::inspectedvalue","powerassert::parser","powerassert::parser::branch","powerassert::parser::dummyparser","powerassert::safeinspectable","powerassert::tracecontext","powerassert#!()","powerassert#==()","powerassert::configuration#_colorize_message=()","powerassert#_fixed?()","powerassert::configuration#_trace_alias_method=()","powerassert::configuration#_use_pp=()","powerassert::app_caller_locations()","powerassert::app_context?()","powerassert::parser#call_paths()","powerassert::parser::dummyparser#call_paths()","powerassert::configuration()","powerassert::configure()","powerassert::tracecontext#disable()","powerassert::tracecontext#enable()","powerassert::tracecontext#enabled?()","powerassert#fixed?()","powerassert::parser#idents()","powerassert::parser::dummyparser#idents()","powerassert::formatter#inspect()","powerassert::inspectedvalue#inspect()","powerassert::safeinspectable#inspect()","powerassert::configuration#lazy_inspection=()","powerassert::context#message()","powerassert::context#message_proc()","powerassert::parser#method_id_set()","powerassert::blockcontext::new()","powerassert::context::new()","powerassert::formatter::new()","powerassert::inspectedvalue::new()","powerassert::parser::new()","powerassert::parser::dummyparser::new()","powerassert::safeinspectable::new()","powerassert::tracecontext::new()","powerassert::start()","powerassert::trace()","powerassert::blockcontext#yield()",""],"info":[["PowerAssert","","PowerAssert.html","",""],["PowerAssert::BlockContext","","PowerAssert/BlockContext.html","",""],["PowerAssert::Configuration","","PowerAssert/Configuration.html","",""],["PowerAssert::Context","","PowerAssert/Context.html","",""],["PowerAssert::Empty","","PowerAssert/Empty.html","",""],["PowerAssert::Formatter","","PowerAssert/Formatter.html","",""],["PowerAssert::InspectedValue","","PowerAssert/InspectedValue.html","",""],["PowerAssert::Parser","","PowerAssert/Parser.html","",""],["PowerAssert::Parser::Branch","","PowerAssert/Parser/Branch.html","",""],["PowerAssert::Parser::DummyParser","","PowerAssert/Parser/DummyParser.html","",""],["PowerAssert::SafeInspectable","","PowerAssert/SafeInspectable.html","",""],["PowerAssert::TraceContext","","PowerAssert/TraceContext.html","",""],["!","PowerAssert","PowerAssert.html#method-i-21","()",""],["==","PowerAssert","PowerAssert.html#method-i-3D-3D","()",""],["_colorize_message=","PowerAssert::Configuration","PowerAssert/Configuration.html#method-i-_colorize_message-3D","(bool)",""],["_fixed?","PowerAssert","PowerAssert.html#method-i-_fixed-3F","()",""],["_trace_alias_method=","PowerAssert::Configuration","PowerAssert/Configuration.html#method-i-_trace_alias_method-3D","(bool)",""],["_use_pp=","PowerAssert::Configuration","PowerAssert/Configuration.html#method-i-_use_pp-3D","(bool)",""],["app_caller_locations","PowerAssert","PowerAssert.html#method-c-app_caller_locations","()",""],["app_context?","PowerAssert","PowerAssert.html#method-c-app_context-3F","()",""],["call_paths","PowerAssert::Parser","PowerAssert/Parser.html#method-i-call_paths","()",""],["call_paths","PowerAssert::Parser::DummyParser","PowerAssert/Parser/DummyParser.html#method-i-call_paths","()",""],["configuration","PowerAssert","PowerAssert.html#method-c-configuration","()",""],["configure","PowerAssert","PowerAssert.html#method-c-configure","()",""],["disable","PowerAssert::TraceContext","PowerAssert/TraceContext.html#method-i-disable","()",""],["enable","PowerAssert::TraceContext","PowerAssert/TraceContext.html#method-i-enable","()",""],["enabled?","PowerAssert::TraceContext","PowerAssert/TraceContext.html#method-i-enabled-3F","()",""],["fixed?","PowerAssert","PowerAssert.html#method-i-fixed-3F","()",""],["idents","PowerAssert::Parser","PowerAssert/Parser.html#method-i-idents","()",""],["idents","PowerAssert::Parser::DummyParser","PowerAssert/Parser/DummyParser.html#method-i-idents","()",""],["inspect","PowerAssert::Formatter","PowerAssert/Formatter.html#method-i-inspect","()",""],["inspect","PowerAssert::InspectedValue","PowerAssert/InspectedValue.html#method-i-inspect","()",""],["inspect","PowerAssert::SafeInspectable","PowerAssert/SafeInspectable.html#method-i-inspect","()",""],["lazy_inspection=","PowerAssert::Configuration","PowerAssert/Configuration.html#method-i-lazy_inspection-3D","(bool)",""],["message","PowerAssert::Context","PowerAssert/Context.html#method-i-message","()",""],["message_proc","PowerAssert::Context","PowerAssert/Context.html#method-i-message_proc","()",""],["method_id_set","PowerAssert::Parser","PowerAssert/Parser.html#method-i-method_id_set","()",""],["new","PowerAssert::BlockContext","PowerAssert/BlockContext.html#method-c-new","(assertion_proc_or_source, assertion_method, source_binding)",""],["new","PowerAssert::Context","PowerAssert/Context.html#method-c-new","(base_caller_length)",""],["new","PowerAssert::Formatter","PowerAssert/Formatter.html#method-c-new","(value, indent)",""],["new","PowerAssert::InspectedValue","PowerAssert/InspectedValue.html#method-c-new","(value)",""],["new","PowerAssert::Parser","PowerAssert/Parser.html#method-c-new","(line, path, lineno, binding, assertion_method_name = nil, assertion_proc = nil)",""],["new","PowerAssert::Parser::DummyParser","PowerAssert/Parser/DummyParser.html#method-c-new","()",""],["new","PowerAssert::SafeInspectable","PowerAssert/SafeInspectable.html#method-c-new","(value)",""],["new","PowerAssert::TraceContext","PowerAssert/TraceContext.html#method-c-new","(binding)",""],["start","PowerAssert","PowerAssert.html#method-c-start","(assertion_proc_or_source, assertion_method: nil, source_binding: TOPLEVEL_BINDING)",""],["trace","PowerAssert","PowerAssert.html#method-c-trace","(frame)",""],["yield","PowerAssert::BlockContext","PowerAssert/BlockContext.html#method-i-yield","()",""],["README","","power_assert-1_1_7/README_rdoc.html","","<p>power_assert\n<p>About\n<p>Power Assert for Ruby.\n"]]}}